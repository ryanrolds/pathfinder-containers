version: "3.9"

services:
  pf-mariadb:
    image: bianjp/mariadb-alpine:latest
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQL_PASSWORD
    volumes:
      - db_data:/var/lib/mysql
      - ./pathfinder/export/sql/eve_universe.sql.zip:/eve_universe.sql.zip
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    restart: always
  pf-redis:
    image: redis:6.2.5-alpine3.14
    command: ["redis-server", "--appendonly", "yes"]
    container_name: redis
    volumes:
      - redis_data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    logging:
      driver: none
    restart: always
  # pf-websockets:
  #   build: 
  #     context: .
  #     dockerfile: pf-websocket.Dockerfile
  #   command: ["--tcpHost", "0.0.0.0"]
  #   container_name: pf-websockets
  #   volumes:
  #     - /etc/timezone:/etc/timezone:ro
  #     - /etc/localtime:/etc/localtime:ro
  #   restart: always
  pathfinder:
    container_name: pathfinder
    build: 
      context: .
      dockerfile: pathfinder.Dockerfile
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.services.pf.loadbalancer.server.port=80"
      - "traefik.http.routers.pf.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.pf.entrypoints=web"
      - "traefik.http.routers.pf-secure.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.pf-secure.entrypoints=websecure"
      - "traefik.http.routers.pf-secure.tls=true"
      - "traefik.http.routers.pf-secure.tls.certresolver=letsencrypt"
      - "traefik.http.middlewares.redirecthttps.redirectscheme.scheme=https"
      - "traefik.http.routers.pf.middlewares=redirecthttps"
    healthcheck:
      disable: true
    volumes:
      - ./pathfinder/:/var/www/html/pathfinder/
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - pf-mariadb
      - pf-redis
      # - pf-websockets
    restart: always
  traefik:
    image: traefik:v2.3
    command:
      - "--log.level=ERROR"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      # Remove below line when ready for production
      - "--certificatesresolvers.letsencrypt.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory" # Remove this line only
      - "--certificatesresolvers.letsencrypt.acme.email=${LE_EMAIL}"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    restart: always

volumes:
     db_data:
     redis_data:
networks:
    pf:
    web:
      external: true
